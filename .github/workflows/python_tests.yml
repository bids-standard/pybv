name: Python tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  create:
    branches: [main]
    tags: ['**']
  schedule:
    - cron: "0 4 1 * *"


jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04, ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    env:
      TZ: Europe/Berlin
      FORCE_COLOR: true

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-dev.txt
        python -m pip install -e .

    - name: install MNE-Python main
      if: "matrix.platform == 'ubuntu-20.04'"
      run: |
        pip install -U https://api.github.com/repos/mne-tools/mne-python/zipball/main

    - name: Display versions and environment information
      run: |
        echo $TZ
        date
        python --version
        which python
        mne sys_info

    - name: Check formatting
      if: ${{ matrix.platform == 'ubuntu-20.04' && matrix.python-version == '3.10' }}
      run: |
        make pep
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )

    - name: Test with pytest
      run: |
        make test

    - name: Build docs
      run: |
        make build-doc

    - name: Upload artifacts
      if: ${{ matrix.platform == 'ubuntu-20.04' && matrix.python-version == '3.10' }}
      uses: actions/upload-artifact@v3
      with:
        name: docs-artifact
        path: docs/_build/html

    - name: Upload coverage report
      if: ${{ matrix.platform == 'ubuntu-20.04' && matrix.python-version == '3.10' }}
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
