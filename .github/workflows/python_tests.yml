name: Python tests

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}-${{ github.event.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 4 1 * *"


jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.12"]
        mne-version: [mne-stable]

        include:
          # special test runs running only on single CI systems to save resources
          # Test development versions
          - platform: ubuntu-latest
            python-version: "3.12"
            mne-version: mne-main

    env:
      TZ: Europe/Berlin
      FORCE_COLOR: true

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[dev]

    - name: install MNE-Python main
      if: matrix.mne-version == 'mne-main'
      run: |
        pip install -U https://github.com/mne-tools/mne-python/archive/refs/heads/main.zip

    - name: Display versions and environment information
      run: |
        echo $TZ
        date
        python --version
        which python
        mne sys_info

    - name: Check formatting
      run: |
        make check-manifest
        pre-commit run --all-files

    - name: Test with pytest
      run: |
        make test

    - name: Build docs
      run: |
        make build-doc

    - name: Upload artifacts
      if: ${{ matrix.platform == 'ubuntu-latest' && matrix.python-version == '3.12' && matrix.mne-version == 'mne-stable'}}
      uses: actions/upload-artifact@v4
      with:
        name: docs-artifact
        path: docs/_build/html

    - name: Upload coverage report
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
